.final_result {
    width: 450px;
}

.final_result_photo {
    max-height: 300px;
    min-height: 300px;
    width: 300px;
}

.final_result_text {
    height: 100px;
}

.final_result_address{
    height: 150px;
}


{current_service && 
    <div className="modal fade" id="galleryModal" tabIndex="-1">
        <div className="modal-dialog modal-xl">
          <div className="modal-content bg-secondary">
            <div className="modal-header w-100">
              <h1 className="modal-title fs-2 fw-bold text-white w-100 text-center">Gallery</h1>
              <button type="button" className="btn-close" data-bs-dismiss="modal" ></button>
            </div>
            <div className="modal-body">
            {loading ? 
                <Loading message={"Fetching additional images"} />
                :
                <div className="h-100">
                    <div className="row row-cols-5 p-2">
                        <div className="col p-2 bg-white">
                            {/* this is the cover image */}
                            <Service_Image url = {current_service.photo_image} /> 
                            {/* {current_service.photos && current_service.photos[0].authorAttributions[0] &&     
                            <p className="fs-6 text-wrap">Image By: <a href= {current_service.photos[0].authorAttributions[0].uri}> {current_service.photos[0].authorAttributions[0].displayName} </a> </p> } */}
                        </div>
                        {current_service.photo_images_urls && current_service.photo_images_urls.map((theUrl, index)=>(
                            <div className="col bg-white p-2" key = {theUrl}>
                                <Service_Image  url = {theUrl}/>
                                {/* {current_service.photos && current_service.photos[0].authorAttributions[0] &&     
                                <p className="fs-6 text-wrap">Image By: <a href= {current_service.photos[index].authorAttributions[0].uri}> {current_service.photos[index].authorAttributions[0].displayName} </a> </p> } */}
                            </div>
                        ))
                        }
                    </div>
                </div>
              }
            </div>
            <div className="modal-footer">
              <button type="button" className="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
    }




    <>
        <div className="container mt-4 mb-5">
            <div>
                <div className="mb-4">
                    <div className = "container">
                        <div className = "text-center text-white">
                            <h1 className="fs-3">{ques.question[0]}</h1>
                        </div>
                        {/* <form onSubmit={destValue}> */}
                            <div>
                                {prevKeys.length > 0 ? 
                                //this part has the button that allows the user to go back
                                <div className="row row-cols-2">
                                    <div className="col-11"> 
                                        <div className="row row-cols-3 mt-3">
                                        {ques.answer.map((answer_array, index)=> (
                                                <div key = {`${index} ${answer_array[0]}`} className="col text-center fs-3">
                                                    <div className="w-75 bg-white border border-2 border-black mb-3" onClick={ () => {
                                                        let temp = answer_array[2] ? answer_array[2] : ""
                                                        console.log("TEMP: " + temp);
                                                        destValue(answer_array[0], answer_array[1], temp);
                                                    }}>
                                                        {answer_array[0]}
                                                    </div>
                                                </div>
                                            ))}
                                        </div>

                                        {/* <select className="form-select" value = {valueSelect} onChange={changeValue}>
                                            <option value="" disabled>Select</option>
                                            {ques.answer.map((answer_array, index) => (
                                            <option key = {`${index} ${answer_array[0]}`} value = {answer_array[0]} data-valueforapi = {answer_array[2] ? answer_array[2] : ""} data-destination = {answer_array[1]}>{answer_array[0]}</option>
                                            )
                                            )}
                                        </select> */}
                                    </div>
                                    <div className="col-1 d-flex align-items-top">
                                        <button type="button" onClick={gotoPrev} className="btn btn-primary w-100">Back</button> 
                                    </div>
                                    {/* <div className="col-1">
                                        <button  type="submit" className="btn btn-primary w-100">Next</button>
                                    </div> */}
                                </div>: 
                                    <div> 
                                        <div className="row row-cols-3 mt-3 w-100">
                                            {ques.answer.map((answer_array, index)=> (
                                                <div key = {`${index} ${answer_array[0]}`} className="col text-center fs-3">
                                                    <div className="w-75 bg-white border border-2 border-black mb-3" onClick={ () => {
                                                        console.log("CLICKED");
                                                        let temp = answer_array[2] ? answer_array[2] : ""
                                                        destValue(answer_array[0], answer_array[1], temp);
                                                    }}>
                                                        {answer_array[0]}
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                        {/* <select className="form-select" value = {valueSelect} onChange={changeValue}>
                                            <option value="" disabled>Select</option>
                                            {ques.answer.map((answer_array, index) => (
                                            <option key = {`${index} ${answer_array[0]}`} value = {answer_array[0]} data-valueforapi = {answer_array[2] ? answer_array[2] : ""} data-destination = {answer_array[1]}>{answer_array[0]}</option>
                                            )
                                            )}
                                        </select> */}
                                    </div>
                                }
                            </div>
                        {/* </form> */}
                    </div>
                </div>
            </div>
            <div className="text-center">
                {generalSearchP && 
                <>
                    <div className="fs-3 text-white">Ready to search for places?(Note: this does not include current response)</div> 
                    <div className="w-100">
                        <div className="fs-3 text-white">Click here :</div>
                        <button className="btn btn-primary w-25" onClick={generalSearch} type = "button">Done</button>
                    </div>
                </>
            }
            {/* {!generalSearchP && userEmail != null &&
            <>
            <SelectFavorites/>
            </>
            } */}
            </div>
        </div>

        <div className="container text-center">
        <div className="fs-4 text-white">Have a specific location in mind?</div>
            <div>
                <form onSubmit={changeSpecLoc}>
                    <input className="w-50 text-center" placeholder="Enter your location here" value ={nameValue} onChange={changeNameValue} required></input>
                    <button className="btn btn-primary" type= "submit">Enter</button>
                </form>
            </div>
        </div>

    </>
